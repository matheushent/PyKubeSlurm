[tool.poetry]
name = "pykubeslurm"
version = "0.1.0"
description = "A Python operator for efficient job scheduling in Slurm using Kubernetes"
authors = ["Matheus Tosta <me@mtosta.dev>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
kubernetes = "^27.2.0"
pydantic = "^2.1.1"
typer = "^0.9.0"
rich = "^13.5.2"
focalize = "^0.1.0"
httpx = "^0.25.0"
pyjwt = "^2.8.0"
pydantic-settings = "^2.0.3"
cryptography = "^41.0.4"
python-jose = "^3.3.0"
apscheduler = "^3.10.4"
aiohttp = "^3.8.6"

[tool.poetry.group.dev.dependencies]
ruff = "^0.1.3"
black = "^23.7.0"
pytest = "^7.4.0"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pytest-env = "^0.8.2"
mypy = "^1.6.1"
pytest-random-order = "^1.1.0"
pytest-sugar = "^0.9.7"
mkdocs-material = "^9.1.21"
mkdocstrings = {extras = ["python"], version = "^0.23.0"}
isort = "^5.12.0"
pytest-aiohttp = "^1.0.5"
freezegun = "^1.2.2"
ops = "^2.8.0"
pygments = "^2.16.1"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "--random-order --cov=pykubeslurm --cov-report=term-missing"
testpaths = ["tests"]
env = [
    "SLURMRESTD_JWT_KEY_PATH = /tmp/dummy"
]

[tool.coverage.report]
omit = [
    "pykubeslurm/vars.py"
]

[tool.black]
line-length = 100
src = ["pykubeslurm", "tests"]

[tool.ruff]
line-length = 100

[tool.isort]
profile = "black"
line_length = 100
src_paths = ["pykubeslurm", "tests"]
multi_line_output = 3
include_trailing_comma = true

[tool.mypy]
follow_imports = "silent"
plugins = [
  "pydantic.mypy"
]
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
ignore_missing_imports = true

# for strict mypy: (this is the tricky one :-))
disallow_untyped_defs = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.poetry.scripts]
pykubeslurm = "pykubeslurm.main:app"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
